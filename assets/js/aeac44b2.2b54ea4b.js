"use strict";(self.webpackChunkzed_docs=self.webpackChunkzed_docs||[]).push([[5752],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),i=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=i(r),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(h,p(p({ref:t},c),{},{components:r})):n.createElement(h,p({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,p[1]=l;for(var i=2;i<a;i++)p[i]=r[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2836:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return u}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),p=["components"],l={},s=void 0,i={unversionedId:"zq/operators/where",id:"zq/operators/where",title:"where",description:"Operator",source:"@site/docs/zq/operators/where.md",sourceDirName:"zq/operators",slug:"/zq/operators/where",permalink:"/zed-docs-site/docs/zq/operators/where",editUrl:"https://github.com/brimdata/zed-docs/tree/main/docs/zq/operators/where.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"uniq",permalink:"/zed-docs-site/docs/zq/operators/uniq"},next:{title:"yield",permalink:"/zed-docs-site/docs/zq/operators/yield"}},c={},u=[{value:"Operator",id:"operator",level:3},{value:"Synopsis",id:"synopsis",level:3},{value:"Description",id:"description",level:3},{value:"Examples",id:"examples",level:3}],d={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"operator"},"Operator"),(0,a.kt)("p",null,"\u2003"," ",(0,a.kt)("strong",{parentName:"p"},"where")," ","\u2014"," select values based on a Boolean expression"),(0,a.kt)("h3",{id:"synopsis"},"Synopsis"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[where] <expr>\n")),(0,a.kt)("h3",{id:"description"},"Description"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"where")," operator filters its input by applying a Boolean expression ",(0,a.kt)("inlineCode",{parentName:"p"},"<expr>"),"\nto each input value and dropping each value for which the expression evaluates\nto ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," or to an error."),(0,a.kt)("p",null,'The "where" keyword requires a regular Zed expression and does not support\n',(0,a.kt)("a",{parentName:"p",href:"/zed-docs-site/docs/zq/language#search-expressions"},"search expressions"),".  Use the\n",(0,a.kt)("a",{parentName:"p",href:"/zed-docs-site/docs/zq/operators/search"},"search operator")," if you want search syntax."),(0,a.kt)("p",null,'When Zed queries are run interactively, it is highly convenient to be able to omit\nthe "where" keyword, but when where filters appear in Zed source files,\nit is good practice to include the optional keyword.'),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"An arithmetic comparison")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 2 3' | zq -z 'where this >= 2' -\n")),(0,a.kt)("p",null,"=>"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"2\n3\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},'The "where" keyword may be dropped')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 2 3' | zq -z 'this >= 2' -\n")),(0,a.kt)("p",null,"=>"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"2\n3\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"A filter with Boolean logic")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 2 3' | zq -z 'where this >= 2 AND this <= 2' -\n")),(0,a.kt)("p",null,"=>"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"2\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Boolean functions may be called")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 \"foo\" 10.0.0.1' | zq -z 'where is(<int64>)' -\n")),(0,a.kt)("p",null,"=>"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"1\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Boolean functions with Boolean logic")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 \"foo\" 10.0.0.1' | zq -z 'where is(<int64>) or is(<ip>)' -\n")),(0,a.kt)("p",null,"=>"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"1\n10.0.0.1\n")))}m.isMDXComponent=!0}}]);