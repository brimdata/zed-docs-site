"use strict";(self.webpackChunkzed_docs=self.webpackChunkzed_docs||[]).push([[4866],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return s}});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=n.createContext({}),d=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),k=d(a),s=l,c=k["".concat(i,".").concat(s)]||k[s]||m[s]||r;return a?n.createElement(c,p(p({ref:t},u),{},{components:a})):n.createElement(c,p({ref:t},u))}));function s(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,p=new Array(r);p[0]=k;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:l,p[1]=o;for(var d=2;d<r;d++)p[d]=a[d];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},7685:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return s},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return m}});var n=a(7462),l=a(3366),r=(a(7294),a(3905)),p=["components"],o={},i="Zed lake service API",d={unversionedId:"zed/api",id:"zed/api",title:"Zed lake service API",description:"Note: This file contains a brief sketch of the functionality exposed in the",source:"@site/docs/zed/api.md",sourceDirName:"zed",slug:"/zed/api",permalink:"/zed-docs-site/docs/zed/api",editUrl:"https://github.com/brimdata/zed-docs/tree/main/docs/zed/api.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"zed - Zed Lake Command",permalink:"/zed-docs-site/docs/zed/"},next:{title:"Zed Lake Design Notes",permalink:"/zed-docs-site/docs/zed/design"}},u={},m=[{value:"Contents",id:"contents",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"Pools",id:"pools",level:3},{value:"Create pool",id:"create-pool",level:4},{value:"Rename pool",id:"rename-pool",level:4},{value:"Delete pool",id:"delete-pool",level:4},{value:"Branches",id:"branches",level:3},{value:"Load Data",id:"load-data",level:4},{value:"Get Branch",id:"get-branch",level:4},{value:"Delete Branch",id:"delete-branch",level:3},{value:"Delete Data",id:"delete-data",level:4},{value:"Merge Branches",id:"merge-branches",level:4},{value:"Revert",id:"revert",level:4},{value:"Index Object",id:"index-object",level:4},{value:"Update Index",id:"update-index",level:4},{value:"Query",id:"query",level:3},{value:"Events",id:"events",level:3},{value:"Response",id:"response",level:4},{value:"Index Rules",id:"index-rules",level:3},{value:"Create Index Rule",id:"create-index-rule",level:4},{value:"Delete Index Rule",id:"delete-index-rule",level:4},{value:"Media Types",id:"media-types",level:2}],k={toc:m};function s(e){var t=e.components,a=(0,l.Z)(e,p);return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"zed-lake-service-api"},"Zed lake service API"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: This file contains a brief sketch of the functionality exposed in the\nZed API. More fined grained documentation will be forthcoming.")),(0,r.kt)("h2",{id:"contents"},"Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#endpoints"},"Endpoints"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#pools"},"Pools"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-pool"},"Create Pool")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#rename-pool"},"Rename Pool")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#delete-pool"},"Delete Pool")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#branches"},"Branches"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#load-data"},"Load Data")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#get-branch"},"Get Branch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#delete-branch"},"Delete Branch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#delete-data"},"Delete Data")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#merge-branches"},"Merge Branches")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#revert"},"Revert")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#index-object"},"Index Object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#update-index"},"Update Index")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#query"},"Query")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#events"},"Events")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#index-rules"},"Index Rules"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-index-rule"},"Create Index Rule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#delete-index-rule"},"Delete Index Rule")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#media-types"},"Media Types"))),(0,r.kt)("h2",{id:"endpoints"},"Endpoints"),(0,r.kt)("h3",{id:"pools"},"Pools"),(0,r.kt)("h4",{id:"create-pool"},"Create pool"),(0,r.kt)("p",null,"Create a new lake pool."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /pool\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"In"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Required.")," Name of the pool. Must be unique to lake.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"layout.order"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"Order of value storage in pool. Possible values: desc, asc. Default: asc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"layout.keys"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"array<string>")),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"Primary key(s) of pool. Default: ts.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"thresh"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"The size in bytes of each seek index.")))),(0,r.kt)("h4",{id:"rename-pool"},"Rename pool"),(0,r.kt)("p",null,"Changes a pool's name."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"PUT /pool/{pool}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"In"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pool"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"ID or name of the requested pool.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Required.")," The desired new name of the pool. Must be unique.")))),(0,r.kt)("h4",{id:"delete-pool"},"Delete pool"),(0,r.kt)("p",null,"Permanently deletes a pool."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"DELETE /pool/{pool}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"In"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pool"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"ID or name of the requested pool.")))),(0,r.kt)("h3",{id:"branches"},"Branches"),(0,r.kt)("h4",{id:"load-data"},"Load Data"),(0,r.kt)("p",null,"Adds data to a pool's staging and returns a reference commit ID."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /pool/{pool}/branch/{branch}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"In"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pool"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of the pool.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"Mime type of the posted content. If undefined, the service will attempt to introspect the data and determine type automatically.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"various"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"Contents of the posted data.")))),(0,r.kt)("h4",{id:"get-branch"},"Get Branch"),(0,r.kt)("p",null,"Get information about a branch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /pool/{pool}/branch/{branch}\n")),(0,r.kt)("h3",{id:"delete-branch"},"Delete Branch"),(0,r.kt)("p",null,"Delete a branch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"DELETE /pool/{pool}/branch/{branch}\n")),(0,r.kt)("h4",{id:"delete-data"},"Delete Data"),(0,r.kt)("p",null,"Takes a list of commit IDs or object IDs in a branch and creates a deletion\ncommit of all referenced objects."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /pool/{pool}/branch/{branch}/delete\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"In"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pool"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of the pool.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"object_ids"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"array<string>")),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"Commit IDs or object IDs to be deleted.")))),(0,r.kt)("h4",{id:"merge-branches"},"Merge Branches"),(0,r.kt)("p",null,"Creates a commit with the difference of the child branch added to the selected\nbranch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /pool/{pool}/branch/{branch}/merge/{child}\n")),(0,r.kt)("h4",{id:"revert"},"Revert"),(0,r.kt)("p",null,"Creates a revert commit of the specified commit."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /pool/{pool}/branch/{branch}/revert/{commit}\n")),(0,r.kt)("h4",{id:"index-object"},"Index Object"),(0,r.kt)("p",null,"Creates an index of an object for the specified rule."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /pool/{pool}/branch/{branch}/index\n")),(0,r.kt)("h4",{id:"update-index"},"Update Index"),(0,r.kt)("p",null,"Applies all or a range of index rules for all objects that are not indexed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /pool/{pool}/branch/{branch}/index/update\n")),(0,r.kt)("h3",{id:"query"},"Query"),(0,r.kt)("p",null,"Executes a Zed query against data in a data lake."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /query\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Params")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"In"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"query"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"Zed query to execute.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"head.pool"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"Pool to query against (Not required if pool is specified in query).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"head.branch"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"Branch to query against (Defaults to main).")))),(0,r.kt)("h3",{id:"events"},"Events"),(0,r.kt)("p",null,"Subscribe to an events feed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /events\n")),(0,r.kt)("h4",{id:"response"},"Response"),(0,r.kt)("p",null,"An event-stream in the format of ",(0,r.kt)("a",{parentName:"p",href:"https://html.spec.whatwg.org/multipage/server-sent-events.html"},"Server-sent events"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'event: pool-new\ndata: {"pool_id": "1sMDXpVwqxm36Rc2vfrmgizc3jz"}\n\nevent: pool-update\ndata: {"pool_id": "1sMDXpVwqxm36Rc2vfrmgizc3jz"}\n\nevent: pool-commit\ndata: {"pool_id": "1sMDXpVwqxm36Rc2vfrmgizc3jz", "commit_id": "1tisISpHoWI7MAZdFBiMERXeA2X"}\n\nevent: pool-delete\ndata: {"pool_id": "1sMDXpVwqxm36Rc2vfrmgizc3jz"}\n\n')),(0,r.kt)("h3",{id:"index-rules"},"Index Rules"),(0,r.kt)("h4",{id:"create-index-rule"},"Create Index Rule"),(0,r.kt)("p",null,"Creates an index rule for a specified field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /index\n")),(0,r.kt)("h4",{id:"delete-index-rule"},"Delete Index Rule"),(0,r.kt)("p",null,"Deletes the specified index rule. Any created object indexes will persist."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"DELETE /index\n")),(0,r.kt)("h2",{id:"media-types"},"Media Types"),(0,r.kt)("p",null,"For responses content types, the service can handle a variety of formats. To\nreceive responses in the desired format, include the mime type of the format in\nthe requests ACCEPT HTTP header."),(0,r.kt)("p",null,"If the ACCEPT header is not specified, the service will return json as default."),(0,r.kt)("p",null,"The supported mime types are as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Format"),(0,r.kt)("th",{parentName:"tr",align:null},"Mime Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"json"),(0,r.kt)("td",{parentName:"tr",align:null},"application/json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ndjson"),(0,r.kt)("td",{parentName:"tr",align:null},"application/ndjson")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"zjson"),(0,r.kt)("td",{parentName:"tr",align:null},"application/x-zjson")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"zson"),(0,r.kt)("td",{parentName:"tr",align:null},"application/x-zson")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"zng"),(0,r.kt)("td",{parentName:"tr",align:null},"application/x-zng")))))}s.isMDXComponent=!0}}]);