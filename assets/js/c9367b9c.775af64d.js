"use strict";(self.webpackChunkzed_docs=self.webpackChunkzed_docs||[]).push([[974],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,k=m["".concat(s,".").concat(d)]||m[d]||i[d]||o;return r?n.createElement(k,l(l({ref:t},u),{},{components:r})):n.createElement(k,l({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9080:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return i}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],p={},s=void 0,c={unversionedId:"zq/operators/search",id:"zq/operators/search",title:"search",description:"Operator",source:"@site/docs/zq/operators/search.md",sourceDirName:"zq/operators",slug:"/zq/operators/search",permalink:"/docs/zq/operators/search",editUrl:"https://github.com/brimdata/zed-docs/tree/main/docs/zq/operators/search.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"sample",permalink:"/docs/zq/operators/sample"},next:{title:"sort",permalink:"/docs/zq/operators/sort"}},u={},i=[{value:"Operator",id:"operator",level:3},{value:"Synopsis",id:"synopsis",level:3},{value:"Description",id:"description",level:3},{value:"Examples",id:"examples",level:3}],m={toc:i};function d(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"operator"},"Operator"),(0,o.kt)("p",null,"\u2003"," ",(0,o.kt)("strong",{parentName:"p"},"search")," ","\u2014"," select values based on a search expression"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[search] <sexpr>\n")),(0,o.kt)("h3",{id:"description"},"Description"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"search")," operator filters its input by applying a search expression ",(0,o.kt)("inlineCode",{parentName:"p"},"<sexpr>"),"\nto each input value and dropping each value for which the expression evaluates\nto ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," or to an error."),(0,o.kt)("p",null,'The "search" keyword may be omitted in which case ',(0,o.kt)("inlineCode",{parentName:"p"},"<sexpr>")," follows\nthe ",(0,o.kt)("a",{parentName:"p",href:"/docs/zq/language#search-expressions"},"search expression")," syntax."),(0,o.kt)("p",null,'When Zed queries are run interactively, it is convenient to be able to omit\nthe "search" keyword, but when search filters appear in Zed source files,\nit is good practice to include the optional keyword.'),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},'A simple keyword search for "world"')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-command"},'echo \'"hello, world" "say hello" "goodbye, world"\' | zq -z \'search world\' -\n')),(0,o.kt)("p",null,"=>"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-output"},'"hello, world"\n"goodbye, world"\n')),(0,o.kt)("p",null,"Search can utilize ",(0,o.kt)("em",{parentName:"p"},"arithmetic comparisons")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 2 3' | zq -z 'search this >= 2' -\n")),(0,o.kt)("p",null,"=>"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"2\n3\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},'The "search" keyword may be dropped')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 2 3' | zq -z '2 or 3' -\n")),(0,o.kt)("p",null,"=>"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"2\n3\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"A search with Boolean logic")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 2 3' | zq -z 'search this >= 2 AND this <= 2' -\n")),(0,o.kt)("p",null,"=>"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"2\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"The AND operator may be omitted through predicate concatenation")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 2 3' | zq -z 'search this >= 2 this <= 2' -\n")),(0,o.kt)("p",null,"=>"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"2\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Concatenation for keyword search")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-command"},'echo \'"foo" "foo bar" "foo bar baz" "baz"\' | zq -z \'foo bar\' -\n')),(0,o.kt)("p",null,"=>"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-output"},'"foo bar"\n"foo bar baz"\n')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Search expressions match fields names too")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '{foo:1} {bar:2} {foo:3}' | zq -z foo -\n")),(0,o.kt)("p",null,"=>"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"{foo:1}\n{foo:3}\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Boolean functions may be called")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 \"foo\" 10.0.0.1' | zq -z 'search is(<int64>)' -\n")),(0,o.kt)("p",null,"=>"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"1\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Boolean functions with Boolean logic")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-command"},"echo '1 \"foo\" 10.0.0.1' | zq -z 'search is(<int64>) or is(<ip>)' -\n")),(0,o.kt)("p",null,"=>"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mdtest-output"},"1\n10.0.0.1\n")))}d.isMDXComponent=!0}}]);